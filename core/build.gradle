import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id "com.github.davidmc24.gradle.plugin.avro" version "1.0.0"
    id 'org.springframework.boot' version '2.4.5'
    id "io.franzbecker.gradle-lombok" version "4.0.0"
}

dependencies {
    implementation group: 'org.springframework.kafka', name: 'spring-kafka'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework', name: 'spring-context', version: '4.2.0.RELEASE'

    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.7.2'
    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.7.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.9.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("build/generated-main-avro-java")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}
